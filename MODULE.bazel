"""AggieCode Bazel Module"""
module(
    name = "aggiecode",
    version = "0.1.0",
)

# --- Go ---
bazel_dep(name = "rules_go", version = "0.48.1")
bazel_dep(name = "gazelle", version = "0.36.0")

# Add Go dependencies for the code execution service
go_deps = use_extension("@gazelle//:extensions.bzl", "go_deps")
go_deps.module(
    path = "github.com/gorilla/mux",
    sum = "h1:i40aqfkR1h2SlN9hojwV5ZA91wcXFOvkdNIeFDP5koI=",
    version = "v1.8.0",
)
go_deps.module(
    path = "golang.org/x/time",
    sum = "h1:o7cqy6amK/52YcAKIPlM3a+Fpj35zvRj2TP+e1xFSfk=",
    version = "v0.5.0",
)
use_repo(go_deps, "com_github_gorilla_mux", "org_golang_x_time")

# --- Python ---
bazel_dep(name = "rules_python", version = "0.31.0")

# --- Skylib --- 
bazel_dep(name = "bazel_skylib", version = "1.5.0")

# --- Packaging ---
bazel_dep(name = "rules_pkg", version = "0.9.1")

python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(
    python_version = "3.11",
)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(
    hub_name = "pypi",
    python_version = "3.11",
    requirements_lock = "//:requirements_lock.txt",
)
use_repo(pip, "pypi")

# --- Node.js / JavaScript ---
bazel_dep(name = "aspect_rules_js", version = "2.0.0")
bazel_dep(name = "rules_nodejs", version = "6.2.0")

# Pin Node.js version via rules_nodejs extension
node = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
node.toolchain(node_version = "18.18.0")
use_repo(node, "nodejs_toolchains")

# Use aspect_rules_js for npm dependency management via pnpm lockfile
npm = use_extension("@aspect_rules_js//npm:extensions.bzl", "npm", dev_dependency = True)
npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
    data = [
        "//:package.json",
        "//frontend:package.json",
        "//backend:package.json",
    ],
    npm_package_target_name = "{name}",
)
use_repo(npm, "npm")

# Make pnpm binary available
pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
use_repo(pnpm, "pnpm")
